<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
    <!--naming-->
    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.naming.ClassNamingShouldBeCamelRule.violation.msg">
        <![CDATA[ 【{0} {1} 】 不符合UpperCamelCase命名风格，正则要求：{2}]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.naming.FieldNameRule.violation.msg">
        <![CDATA[
            【{0} {1} 】不符合规则，正则要求：{2}]
        ]]>
    </entry>
    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.naming.MethodNamingShouldBeCamelRule.violation.msg">
        <![CDATA[
            【{0} {1} 】不符合规则，正则要求：{2}]
        ]]>
    </entry>
    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.naming.AbstractClassNamingStartWithBaseOrAbstractRule.violation.msg">
        <![CDATA[
            （九）【建议】抽象类 【{0}】 命名使用 Abstract 或 Base 开头
        ]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.naming.ExceptionClassNamingEndWithBaseExceptionRule.violation.msg">
        <![CDATA[
            （九）【建议】异常类 【{0}】 命名使用 Exception 结尾
        ]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.naming.TestClassShouldEndWithTestNamingRule.violation.msg">
        <![CDATA[
            （九）【建议】测试类 【{0}】 命名使用 Test 结尾
        ]]>
    </entry>
    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.naming.VariableNamingRule.violation.msg">
        <![CDATA[
            【{0}】不符合规则，正则要求：{1}]
        ]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.naming.PackageNameLowerCaseRule.violation.msg">
        <![CDATA[
            包名【{0}】不符合规则，包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用单数形式，但是类名如果有复数含义，类名可以使用复数形式
        ]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.constant.UpperEllRule.violation.msg">
        <![CDATA[ 【{0}】 应使用大写L ]]>
    </entry>


    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.constant.IfStatementRule.violation.msg">
        <![CDATA[ 【{0}】不符合规则 ,【强制】左小括号和右边相邻字符之间不出现空格；右小括号和左边相邻字符之间也不出现空 格；而左大括号前需要加空格。 ]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.comment.EndLineCommentMustHaveOneWhitespaceRule.violation.msg">
        <![CDATA[ 【{0}】不符合规则 ,【强制】注释的双斜线与注释内容之间有且仅有一个空格 ]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.comment.JavadocCommentRule.violation.msg">
        <![CDATA[ 【{0}】不符合规则 ,（二）【强制】类、类属性、类方法的注释必须使用Javadoc 规范使用/**内容*/格式，不得使用// xxx 方式。 ]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.oop.BigDecimalAvoidDoubleConstructorRule.violation.msg">
        <![CDATA[ 【{0}】不符合规则 ,【强制】禁止使用构造方法 BigDecimal(double)的方式把 double 值转化为 BigDecimal 对象。 ]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.oop.AvoidJavaSqlDateRule.violation.msg">
        <![CDATA[ 【{0}】不符合规则 ,【强制】不允许在程序任何地方中使用：java.sql.Date   java.sql.Time  java.sql.Timestamp。 ]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.oop.AvoidAccessStaticViaInstanceRule.violation.msg">
        <![CDATA[ 【{0}】不符合规则 ,【强制】避免通过一个类的对象引用访问此类的静态变量或静态方法无谓增加编译器解析成本，直接用类名来访问即可。 ]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.oop.OverrideMethodMustOverrideAnnotationRule.violation.msg">
        <![CDATA[ 【{0}】不符合规则 ,【强制】所有的覆写方法，必须加@Override 注解 ]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.oop.AvoidIsGetMethodCoexistRule.violation.msg">
        <![CDATA[ 【{0}】不符合规则 ,【强制】禁止在 POJO 类中，同时存在对应属性 xxx 的 isXxx()和 getXxx()方法 ]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.flowcontrol.SwitchBranchMustBreakRule.violation.msg">
        <![CDATA[ 【{0}】不符合规则  ]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.flowcontrol.BlockMustHavingDelimiterRule.violation.msg">
        <![CDATA[ 【{0}】不符合规则 ,【强制】在 if/else/for/while/do 语句中必须使用大括号。]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.collection.EqualsHashCodeRule.violation.msg">
        <![CDATA[ 【{0}】不符合规则 ,1.只要重写 equals，就必须重写 hashCode；]]>
    </entry>

    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.collection.MapSetKeyMustEqualsHashCodeRule.violation.msg">
        <![CDATA[ 【{0}】不符合规则 ,1.只要重写 equals，就必须重写 hashCode；]]>
    </entry>


    <entry key="com.intellij.plugins.bodhi.pmd.lang.java.rule.concurrent.ThreadPoolCreationRule.violation.msg">
        <![CDATA[ 【{0}】不符合规则 ,（四）【强制】线程池不允许使用 Executors 去创建ThreadPoolExecutor ]]>
    </entry>











</properties>
