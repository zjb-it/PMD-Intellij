<?xml version="1.0"?>

<ruleset name="LuBanCollection" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description>LuBanCollection</description>

    <rule name="EqualsHashCodeRule"
          language="java"
          class="com.intellij.plugins.bodhi.pmd.lang.java.rule.collection.EqualsHashCodeRule">
        <description>
            1.只要重写 equals，就必须重写 hashCode；
        </description>
        <priority>3</priority>
    </rule>

    <rule name="MapSetKeyMustEqualsHashCodeRule"
          language="java"
          class="com.intellij.plugins.bodhi.pmd.lang.java.rule.collection.MapSetKeyMustEqualsHashCodeRule">
        <description>
            2.因为 Set 存储的是不重复的对象，依据 hashCode 和 equals 进行判断，所以 Set 存储的对象必须重写这两个方法；
            3.如果自定义对象作为 Map 的键，那么必须覆写 hashCode 和 equals。
        </description>
        <priority>3</priority>
    </rule>


    <rule name="AvoidUseCollectionSizeRule"
          language="java"
          message="{0}判断所有集合内部的元素是否为空，使用 isEmpty()方法，而不是 size()==0 的方式"
          class="net.sourceforge.pmd.lang.rule.xpath.XPathRule">
        <description>
            （二）【强制】判断所有集合内部的元素是否为空，使用 isEmpty()方法，而不是 size()==0 的方式
        </description>
        <priority>3</priority>
        <properties>
            <property name="xpath">
                <value>
                    <![CDATA[
//InfixExpression[@Operator = "=="][NumericLiteral[@Image="0"] and (.//MethodCall[pmd-java:matchesSig("java.util.Collection#size()")]
 or .//MethodCall[pmd-java:matchesSig("java.util.Map#size()")])]

]]>
                </value>
            </property>
        </properties>
        <example>
        <![CDATA[
            说明：前者的时间复杂度为 O(1)，而且可读性更好。
            正例：
            Map<String, Object> map = new HashMap<>();
            if(map.isEmpty()) {
            System.out.println("no element in this map.");
            }
        ]]>
        </example>
    </rule>


    <rule name="CollectorsToMapMustMergeFunctionRule"
          language="java"
          message="message"
          class="net.sourceforge.pmd.lang.rule.xpath.XPathRule">
        <description>
            （三）【强制】在使用 java.util.stream.Collectors 类的 toMap()方法转为 Map 集合时，一定要使用含有参数类型为 BinaryOperator，参数名为 mergeFunction 的方法，否则当出现相同 key值时会抛IllegalStateException 异常
        </description>
        <priority>3</priority>
        <properties>
            <property name="xpath">
                <value>
                    <![CDATA[
//MethodCall[pmd-java:matchesSig('java.util.stream.Collectors#toMap(_,_)')]
]]>
                </value>
            </property>
        </properties>
        <example>
        <![CDATA[
             List<Pair<String, Double>> pairArrayList = new ArrayList<>(3);
        pairArrayList.add(new MutablePair<>("version", 6.19));
        pairArrayList.add(new MutablePair<>("version", 10.24));
        pairArrayList.add(new MutablePair<>("version", 13.14));

        // 正例 生成的 map 集合中只有一个键值对：{version=13.14}
        Map<String, Double> map1 = pairArrayList.stream().collect(
                Collectors.toMap(Pair::getKey, Pair::getValue, (v1, v2) -> v2));
        //  反例： java.lang.IllegalStateException: Duplicate key version
        map1 = pairArrayList.stream().collect(
                Collectors.toMap(Pair::getKey, Pair::getValue));
        ]]>
        </example>
    </rule>


</ruleset>
